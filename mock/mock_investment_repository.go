// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/investment.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/frencius/loan-service/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIInvestmentRepository is a mock of IInvestmentRepository interface.
type MockIInvestmentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInvestmentRepositoryMockRecorder
}

// MockIInvestmentRepositoryMockRecorder is the mock recorder for MockIInvestmentRepository.
type MockIInvestmentRepositoryMockRecorder struct {
	mock *MockIInvestmentRepository
}

// NewMockIInvestmentRepository creates a new mock instance.
func NewMockIInvestmentRepository(ctrl *gomock.Controller) *MockIInvestmentRepository {
	mock := &MockIInvestmentRepository{ctrl: ctrl}
	mock.recorder = &MockIInvestmentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInvestmentRepository) EXPECT() *MockIInvestmentRepositoryMockRecorder {
	return m.recorder
}

// CreateInvestment mocks base method.
func (m *MockIInvestmentRepository) CreateInvestment(ctx context.Context, investment *model.Investment) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvestment", ctx, investment)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvestment indicates an expected call of CreateInvestment.
func (mr *MockIInvestmentRepositoryMockRecorder) CreateInvestment(ctx, investment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvestment", reflect.TypeOf((*MockIInvestmentRepository)(nil).CreateInvestment), ctx, investment)
}

// GetInvestmentByInvestorID mocks base method.
func (m *MockIInvestmentRepository) GetInvestmentByInvestorID(ctx context.Context, id string) (*model.Investment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvestmentByInvestorID", ctx, id)
	ret0, _ := ret[0].(*model.Investment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInvestmentByInvestorID indicates an expected call of GetInvestmentByInvestorID.
func (mr *MockIInvestmentRepositoryMockRecorder) GetInvestmentByInvestorID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvestmentByInvestorID", reflect.TypeOf((*MockIInvestmentRepository)(nil).GetInvestmentByInvestorID), ctx, id)
}
