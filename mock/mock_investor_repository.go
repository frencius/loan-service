// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/investor.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/frencius/loan-service/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIInvestorRepository is a mock of IInvestorRepository interface.
type MockIInvestorRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInvestorRepositoryMockRecorder
}

// MockIInvestorRepositoryMockRecorder is the mock recorder for MockIInvestorRepository.
type MockIInvestorRepositoryMockRecorder struct {
	mock *MockIInvestorRepository
}

// NewMockIInvestorRepository creates a new mock instance.
func NewMockIInvestorRepository(ctrl *gomock.Controller) *MockIInvestorRepository {
	mock := &MockIInvestorRepository{ctrl: ctrl}
	mock.recorder = &MockIInvestorRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInvestorRepository) EXPECT() *MockIInvestorRepositoryMockRecorder {
	return m.recorder
}

// GetInvestorByID mocks base method.
func (m *MockIInvestorRepository) GetInvestorByID(ctx context.Context, id string) (*model.Investor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvestorByID", ctx, id)
	ret0, _ := ret[0].(*model.Investor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInvestorByID indicates an expected call of GetInvestorByID.
func (mr *MockIInvestorRepositoryMockRecorder) GetInvestorByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvestorByID", reflect.TypeOf((*MockIInvestorRepository)(nil).GetInvestorByID), ctx, id)
}
